{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nfunction PopupWithCheckboxComponent_mat_checkbox_5_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-checkbox\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function PopupWithCheckboxComponent_mat_checkbox_5_Template_mat_checkbox_ngModelChange_0_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r3);\n      var check_r1 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(check_r1.value = $event);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var check_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngModel\", check_r1.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(check_r1.displayName);\n  }\n}\nvar PopupWithCheckboxComponent = /** @class */function () {\n  function PopupWithCheckboxComponent() {\n    this.isVisible = false;\n    this.direction = \"horizontal\"; // horizontal || vertical\n    this.accept = new EventEmitter();\n    this.reject = new EventEmitter();\n    this.isVisibleChange = new EventEmitter();\n  }\n  PopupWithCheckboxComponent.prototype.ngOnInit = function () {\n    if (!this.acceptLabel) {\n      this.acceptLabel = 'Ok';\n    }\n    if (!this.rejectLabel) {\n      this.rejectLabel = 'Cancel';\n    }\n    this.radioValue = this.defaultRadioValue;\n  };\n  PopupWithCheckboxComponent.prototype.onAccept = function (event) {\n    this.accept.emit(this.checkOptions);\n    this.hidePopup();\n  };\n  PopupWithCheckboxComponent.prototype.onReject = function (event) {\n    this.reject.emit(event);\n    this.hidePopup();\n  };\n  PopupWithCheckboxComponent.prototype.hidePopup = function () {\n    this.isVisible = false;\n    this.isVisibleChange.emit(this.isVisible);\n  };\n  PopupWithCheckboxComponent.ɵfac = function PopupWithCheckboxComponent_Factory(t) {\n    return new (t || PopupWithCheckboxComponent)();\n  };\n  PopupWithCheckboxComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PopupWithCheckboxComponent,\n    selectors: [[\"popup-with-checkbox\"]],\n    inputs: {\n      isVisible: \"isVisible\",\n      title: \"title\",\n      content: \"content\",\n      checkOptions: \"checkOptions\",\n      defaultRadioValue: \"defaultRadioValue\",\n      acceptLabel: \"acceptLabel\",\n      rejectLabel: \"rejectLabel\",\n      direction: \"direction\"\n    },\n    outputs: {\n      accept: \"accept\",\n      reject: \"reject\",\n      isVisibleChange: \"isVisibleChange\"\n    },\n    decls: 6,\n    vars: 5,\n    consts: [[3, \"acceptLabel\", \"rejectLabel\", \"isVisible\", \"isVisibleChange\", \"accept\", \"reject\"], [1, \"popup__title\"], [1, \"popup__content\"], [1, \"check-container\"], [3, \"ngModel\", \"ngModelChange\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngModel\", \"ngModelChange\"]],\n    template: function PopupWithCheckboxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"popup-base\", 0);\n        i0.ɵɵlistener(\"isVisibleChange\", function PopupWithCheckboxComponent_Template_popup_base_isVisibleChange_0_listener($event) {\n          return ctx.isVisible = $event;\n        })(\"accept\", function PopupWithCheckboxComponent_Template_popup_base_accept_0_listener($event) {\n          return ctx.onAccept($event);\n        })(\"reject\", function PopupWithCheckboxComponent_Template_popup_base_reject_0_listener($event) {\n          return ctx.onReject($event);\n        });\n        i0.ɵɵelementStart(1, \"span\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"span\", 2)(4, \"p\", 3);\n        i0.ɵɵtemplate(5, PopupWithCheckboxComponent_mat_checkbox_5_Template, 2, 2, \"mat-checkbox\", 4);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"acceptLabel\", ctx.acceptLabel)(\"rejectLabel\", ctx.rejectLabel)(\"isVisible\", ctx.isVisible);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.title);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.checkOptions);\n      }\n    },\n    encapsulation: 2\n  });\n  return PopupWithCheckboxComponent;\n}();\nexport { PopupWithCheckboxComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}