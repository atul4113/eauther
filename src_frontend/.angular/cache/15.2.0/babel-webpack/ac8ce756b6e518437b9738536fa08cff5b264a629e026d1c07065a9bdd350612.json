{"ast":null,"code":"import { Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthUserService } from \"../service/auth-user.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/auth-user.service\";\nimport * as i2 from \"@angular/router\";\nvar AuthGuard = /** @class */function () {\n  function AuthGuard(_authService, _router) {\n    this._authService = _authService;\n    this._router = _router;\n  }\n  AuthGuard.prototype.canActivate = function (next, state) {\n    var _this = this;\n    return Observable.create(function (observer) {\n      _this._authService.get().subscribe(function (user) {\n        if (user.isAuthenticated) {\n          observer.next(true);\n          observer.complete();\n        } else {\n          observer.next(false);\n          observer.complete();\n          _this._router.navigateByUrl('/accounts/login?next=' + state.url);\n        }\n      });\n    });\n  };\n  AuthGuard.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthUserService), i0.ɵɵinject(i2.Router));\n  };\n  AuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac\n  });\n  return AuthGuard;\n}();\nexport { AuthGuard };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}