{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { Language } from \"../../admin/model/language\";\nimport { Conflict } from \"../../admin/model/conflict\";\nimport { RestClientService } from \"./rest-client.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./rest-client.service\";\nvar LANGUAGES_URL = '/translations/languages';\nvar LABELS_LIST_URL = '/translations';\nvar LABELS_IMPORT_URL = '/translations/import';\nvar LABELS_URL = '/translations/label';\nvar CONFLICTS_URL = '/translations/import/resolve_conflicts';\nvar TranslationsAdminService = /** @class */function () {\n  function TranslationsAdminService(_restClient) {\n    this._restClient = _restClient;\n    this.mapConflicts = function (response) {\n      return new Conflict(response);\n    };\n  }\n  TranslationsAdminService.prototype.getLanguagesList = function () {\n    return this._restClient.get(LANGUAGES_URL).pipe(map(function (response) {\n      return response.map(function (lang) {\n        return new Language(lang);\n      });\n    }));\n  };\n  /*\r\n  returns id of the newly created lang:\r\n   {\r\n    \"created_date\": \"2017-07-27T02:40:26.204017\",\r\n    \"id\": 5724160613416960,\r\n    \"lang_description\": \"english do usuniecia\",\r\n    \"lang_key\": \"en_US7\",\r\n    \"modified_date\": \"2017-07-27T02:40:26.204049\"\r\n   }\r\n  */\n  TranslationsAdminService.prototype.addLanguage = function (lang) {\n    var params = {\n      \"lang_key\": lang.key,\n      \"lang_description\": lang.description\n    };\n    return this._restClient.post(LANGUAGES_URL, params);\n  };\n  TranslationsAdminService.prototype.deleteLanguage = function (lang) {\n    return this._restClient.delete(LANGUAGES_URL + \"/\" + lang.id);\n  };\n  TranslationsAdminService.prototype.getLabels = function (lang) {\n    return this._restClient.get(LABELS_LIST_URL + \"/\" + lang.id);\n  };\n  // returns empty object\n  TranslationsAdminService.prototype.addLabel = function (createNotification, label) {\n    var params = {\n      \"create_notification\": createNotification,\n      \"name\": label.key,\n      \"value\": label.value\n    };\n    return this._restClient.post(LABELS_URL, params);\n  };\n  TranslationsAdminService.prototype.isLabelKeyValid = function (key) {\n    var reg = RegExp(/^[\\d\\w.]+$/);\n    var res = reg.exec(key);\n    return res !== null;\n  };\n  // for mass importing labels\n  TranslationsAdminService.prototype.importLabels = function (lang, createNotification, labels) {\n    var params = {\n      \"lang\": lang.id,\n      \"create_notification\": createNotification,\n      \"pasted_json\": JSON.parse(labels)\n    };\n    return this._restClient.post(LABELS_IMPORT_URL, params);\n  };\n  TranslationsAdminService.prototype.removeLabel = function (label) {\n    return this._restClient.delete(LABELS_URL + \"/\" + label.key);\n  };\n  TranslationsAdminService.prototype.modifyLabel = function (lang, label, newValue) {\n    var params = {\n      \"lang_key\": lang.key,\n      \"name\": label.key,\n      \"value\": newValue\n    };\n    return this._restClient.put(LABELS_URL, params);\n  };\n  TranslationsAdminService.prototype.getConflicts = function (id) {\n    return this._restClient.get(CONFLICTS_URL + \"/\" + id);\n  };\n  TranslationsAdminService.prototype.resolveConflicts = function (id, conflicts) {\n    var params = {\n      \"replace_conflict\": conflicts\n    };\n    return this._restClient.post(CONFLICTS_URL + \"/\" + id, params);\n  };\n  TranslationsAdminService.ɵfac = function TranslationsAdminService_Factory(t) {\n    return new (t || TranslationsAdminService)(i0.ɵɵinject(i1.RestClientService));\n  };\n  TranslationsAdminService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TranslationsAdminService,\n    factory: TranslationsAdminService.ɵfac\n  });\n  return TranslationsAdminService;\n}();\nexport { TranslationsAdminService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}