{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Label } from \"../../../admin/model/label\";\nimport { TranslationsService, InfoMessageService, TranslationsAdminService } from \"../../service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service\";\nvar AddLabelComponent = /** @class */function () {\n  function AddLabelComponent(_infoMessage, _translationsAdmin, _translations) {\n    this._infoMessage = _infoMessage;\n    this._translationsAdmin = _translationsAdmin;\n    this._translations = _translations;\n    this.addNewLabels = new EventEmitter();\n    this.newLabelKey = '';\n    this.newLabelValue = '';\n  }\n  AddLabelComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    this._translations.getTranslations().subscribe(function (t) {\n      return _this.translations = t;\n    });\n  };\n  AddLabelComponent.prototype.addNewLabel = function () {\n    var _this = this;\n    if (!this._translationsAdmin.isLabelKeyValid(this.newLabelKey) || this.newLabelValue.trim() === '') {\n      this._infoMessage.addWarning('Incorrect label key, use only letters, digits and dot.');\n      return;\n    }\n    var newLabels = [];\n    var wasError = false;\n    for (var _i = 0, _a = this.languages; _i < _a.length; _i++) {\n      var lang = _a[_i];\n      var label = new Label();\n      label.language = lang.key;\n      label.key = this.newLabelKey;\n      label.value = this.newLabelValue;\n      newLabels.push(label);\n    }\n    this._translationsAdmin.addLabel(false, newLabels[0]).subscribe(function (result) {\n      _this._infoMessage.addSuccess(\"Added label to languages\");\n      _this.addNewLabels.emit(newLabels);\n      _this.newLabelKey = '';\n      _this.newLabelValue = '';\n    }, function (error) {\n      switch (error.code) {\n        case 0:\n          _this._infoMessage.addError(\"Translation conflict for key %s. You have to edit this label.\");\n          break;\n        case 1:\n          _this._infoMessage.addError(\"Translation malformed: \" + error.additional_message);\n          break;\n        case 2:\n          _this._infoMessage.addError(\"Translation label already exists\");\n          break;\n        case 3:\n          _this._infoMessage.addError(\"Translation language not exist\");\n          break;\n        default:\n          _this._infoMessage.addError(\"Unknown error\");\n      }\n    });\n  };\n  AddLabelComponent.ɵfac = function AddLabelComponent_Factory(t) {\n    return new (t || AddLabelComponent)(i0.ɵɵdirectiveInject(i1.InfoMessageService), i0.ɵɵdirectiveInject(i1.TranslationsAdminService), i0.ɵɵdirectiveInject(i1.TranslationsService));\n  };\n  AddLabelComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddLabelComponent,\n    selectors: [[\"add-label\"]],\n    inputs: {\n      languages: \"languages\"\n    },\n    outputs: {\n      addNewLabels: \"addNewLabels\"\n    },\n    decls: 14,\n    vars: 14,\n    consts: [[1, \"input-group\"], [1, \"mdl-textfield\", \"mdl-js-textfield\"], [\"type\", \"text\", \"id\", \"new-label-key\", 1, \"mdl-textfield__input\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"new-label-key\", 1, \"mdl-textfield__label\"], [\"type\", \"text\", \"id\", \"new-label-value\", 1, \"mdl-textfield__input\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"new-label-value\", 1, \"mdl-textfield__label\"], [1, \"mdl-button\", \"mdl-js-button\", \"mdl-button--raised\", \"mdl-button--colored\", 3, \"click\"]],\n    template: function AddLabelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function AddLabelComponent_Template_input_ngModelChange_2_listener($event) {\n          return ctx.newLabelKey = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"label\", 3);\n        i0.ɵɵtext(4);\n        i0.ɵɵpipe(5, \"getLabel\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 1)(7, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function AddLabelComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.newLabelValue = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"label\", 5);\n        i0.ɵɵtext(9);\n        i0.ɵɵpipe(10, \"getLabel\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function AddLabelComponent_Template_button_click_11_listener() {\n          return ctx.addNewLabel();\n        });\n        i0.ɵɵtext(12);\n        i0.ɵɵpipe(13, \"getLabel\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.newLabelKey);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(5, 5, ctx.translations, \"plain.browse_labels.panel.key_name\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.newLabelValue);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(10, 8, ctx.translations, \"plain.browse_labels.panel.translation_value\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(13, 11, ctx.translations, \"plain.common.add_label.add_translations\"), \" \");\n      }\n    },\n    encapsulation: 2\n  });\n  return AddLabelComponent;\n}();\nexport { AddLabelComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}