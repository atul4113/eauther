{"ast":null,"code":"import { Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthUserService } from \"../service/auth-user.service\";\nimport { PathsService } from \"../service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/auth-user.service\";\nimport * as i2 from \"../service\";\nimport * as i3 from \"@angular/router\";\nvar OnlyNoAuthGuard = /** @class */function () {\n  function OnlyNoAuthGuard(_authService, _paths, _router) {\n    this._authService = _authService;\n    this._paths = _paths;\n    this._router = _router;\n  }\n  OnlyNoAuthGuard.prototype.canActivate = function (next, state) {\n    var _this = this;\n    return Observable.create(function (observer) {\n      _this._authService.get().subscribe(function (user) {\n        if (!user.isAuthenticated) {\n          observer.next(true);\n          observer.complete();\n        } else {\n          observer.next(false);\n          observer.complete();\n          var next_1 = _this._paths.getParameterByName('next');\n          if (next_1) {\n            window.location.href = window.location.protocol + '//' + window.location.host + next_1;\n          } else {\n            _this._router.navigateByUrl('home');\n          }\n        }\n      });\n    });\n  };\n  OnlyNoAuthGuard.ɵfac = function OnlyNoAuthGuard_Factory(t) {\n    return new (t || OnlyNoAuthGuard)(i0.ɵɵinject(i1.AuthUserService), i0.ɵɵinject(i2.PathsService), i0.ɵɵinject(i3.Router));\n  };\n  OnlyNoAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OnlyNoAuthGuard,\n    factory: OnlyNoAuthGuard.ɵfac\n  });\n  return OnlyNoAuthGuard;\n}();\nexport { OnlyNoAuthGuard };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}