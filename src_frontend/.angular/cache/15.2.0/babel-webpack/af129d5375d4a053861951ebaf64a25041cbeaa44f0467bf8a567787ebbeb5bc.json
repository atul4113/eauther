{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport { BaseUploadFileComponent } from \"../base-upload-file/base-upload-file.component\";\nimport * as i0 from \"@angular/core\";\n/*\r\n    Upload file component based on ng2-file-upload module.\r\n\r\n    Usage:\r\n        * in template:\r\n            <upload-file #uploadFileUniqueId\r\n                (selected)=\"onFileSelected($event)\">\r\n            </upload-file>\r\n            <span *ngIf=\"file\">{{ file.name }} ({{ file.fileId }})</span>\r\n            <button\r\n                (click)=\"doUpload()\"\r\n                [disabled]=\"!file || file.isUploaded\"\r\n                class=\"mdl-button mdl-js-button mdl-button--raised mdl-button--colored\">\r\n              upload\r\n            </button>\r\n\r\n        * in component:\r\n            @ViewChild('uploadFileUniqueId') uploadFile: UploadFileComponent;\r\n\r\n            private file: File;\r\n\r\n            public onFileSelected (file: FileData) {\r\n                this.file = file;\r\n            }\r\n\r\n            public doUpload () {\r\n                if ( !file.isUploaded ) {\r\n                    uploadFile.upload().subscribe(\r\n                    (uploadedFile: FileData) => {\r\n                        this.file = uploadedFile;\r\n                        // do sth with uploadedFile\r\n                    }, (error: UploadFileError) => {\r\n                        // do sth about error\r\n                    });\r\n                }\r\n            }\r\n\r\n    Events:\r\n        * selected - emitted when file has been selected, $event object holds File instance.\r\n        * uploaded - emitted when file has been successfully uploaded, $event object holds UploadedFile instance,\r\n        * error - emitted when file upload fails, $event object holds UploadFileError instance,\r\n        * fileChange - emitted when file upload status is changing, $event is a boolean value.\r\n */\nvar UploadFileComponent = /** @class */function () {\n  function UploadFileComponent() {\n    this.disabled = false;\n    this.selected = new EventEmitter();\n  }\n  UploadFileComponent.prototype.upload = function () {\n    return this.baseUploadFile.upload();\n  };\n  UploadFileComponent.prototype.onSelected = function (file) {\n    this.selected.emit(file);\n  };\n  UploadFileComponent.prototype.clear = function () {\n    this.baseUploadFile.clear();\n  };\n  UploadFileComponent.ɵfac = function UploadFileComponent_Factory(t) {\n    return new (t || UploadFileComponent)();\n  };\n  UploadFileComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UploadFileComponent,\n    selectors: [[\"upload-file\"]],\n    viewQuery: function UploadFileComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(BaseUploadFileComponent, 5);\n      }\n      if (rf & 2) {\n        var _t = void 0;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.baseUploadFile = _t.first);\n      }\n    },\n    inputs: {\n      disabled: \"disabled\"\n    },\n    outputs: {\n      selected: \"selected\"\n    },\n    decls: 4,\n    vars: 1,\n    consts: [[3, \"selected\"], [\"mat-mini-fab\", \"\", \"color\", \"accent\", 3, \"disabled\", \"click\"], [1, \"material-icons\"]],\n    template: function UploadFileComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"base-upload-file\", 0);\n        i0.ɵɵlistener(\"selected\", function UploadFileComponent_Template_base_upload_file_selected_0_listener($event) {\n          return ctx.onSelected($event);\n        });\n        i0.ɵɵelementStart(1, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function UploadFileComponent_Template_button_click_1_listener() {\n          return ctx.baseUploadFile.openFilePicker();\n        });\n        i0.ɵɵelementStart(2, \"i\", 2);\n        i0.ɵɵtext(3, \"file_upload\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !ctx.baseUploadFile.uploader || ctx.baseUploadFile.file && ctx.baseUploadFile.file.isUploading || ctx.disabled);\n      }\n    },\n    encapsulation: 2\n  });\n  return UploadFileComponent;\n}();\nexport { UploadFileComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}