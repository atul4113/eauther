{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Directive, ElementRef, Renderer, Input } from \"@angular/core\";\nvar PutFooterBottom = /** @class */function () {\n  function PutFooterBottom(el, _renderer) {\n    this._renderer = _renderer;\n    this.paddingAndMargin = 0;\n    this.native = el.nativeElement;\n  }\n  PutFooterBottom.prototype.ngAfterViewInit = function () {\n    var _this = this;\n    this.footer = document.getElementsByTagName('footer')[0];\n    this.onResize();\n    this.windowListenResizeFunc = this._renderer.listenGlobal('window', 'resize', function () {\n      return _this.onResize();\n    });\n  };\n  PutFooterBottom.prototype.ngOnDestroy = function () {\n    this.footer = null;\n    this.windowListenResizeFunc();\n  };\n  PutFooterBottom.prototype.hasScrollBar = function () {\n    return document.body.scrollHeight > document.body.clientHeight;\n  };\n  PutFooterBottom.prototype.onResize = function () {\n    var _this = this;\n    if (this.native && this.footer) {\n      var headerHeight = this.native.offsetTop;\n      var footerHeight = this.footer.clientHeight;\n      var windowHeight = window.innerHeight;\n      if (headerHeight === 0 || footerHeight < 265) {\n        setTimeout(function () {\n          return _this.onResize();\n        }, 100);\n      } else {\n        var minHeight = windowHeight - headerHeight - footerHeight - this.paddingAndMargin;\n        var hasScrollBarBefore = this.hasScrollBar();\n        this.native.style.minHeight = minHeight;\n        var hasScrollBarAfter = this.hasScrollBar();\n        if (!hasScrollBarBefore && hasScrollBarAfter) {\n          setTimeout(function () {\n            return _this.onResize();\n          }, 100);\n        }\n      }\n    } else {\n      setTimeout(function () {\n        return _this.onResize();\n      }, 100);\n    }\n  };\n  var _a;\n  __decorate([Input('putFooterBottom'), __metadata(\"design:type\", Object)], PutFooterBottom.prototype, \"paddingAndMargin\", void 0);\n  PutFooterBottom = __decorate([Directive({\n    selector: '[putFooterBottom]'\n  }), __metadata(\"design:paramtypes\", [ElementRef, typeof (_a = typeof Renderer !== \"undefined\" && Renderer) === \"function\" ? _a : Object])], PutFooterBottom);\n  return PutFooterBottom;\n}();\nexport { PutFooterBottom };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}