{"ast":null,"code":"import { Router } from \"@angular/router\";\nimport { Observable } from \"rxjs/Observable\";\nimport { share, map } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nvar URLS = {\n  HOME: [\"/home\"],\n  PROJECT: [\"/corporate/list\"],\n  DASHBOARD: [\"/corporate\"],\n  MY_LESSONS: [\"/mycontent\"]\n};\nvar PathsService = /** @class */function () {\n  function PathsService(_router) {\n    var _this = this;\n    this._router = _router;\n    this.pathsObservable = Observable.create(function (observer) {\n      _this.pathsObserver = observer;\n      _this._router.events.subscribe(function (event) {\n        if (event.url && event.url !== _this.currentPath) {\n          _this.previousPath = _this.currentPath;\n          _this.currentPath = event.url;\n          observer.next(_this.currentPath);\n        }\n      });\n    }).pipe(share());\n  }\n  PathsService.prototype.getActiveSection = function (path) {\n    for (var section in URLS) {\n      var sectionUrls = URLS[section];\n      for (var url in sectionUrls) {\n        var sectionUrl = sectionUrls[url];\n        if (path.indexOf(sectionUrl) === 0) {\n          return section;\n        }\n      }\n    }\n    return path === \"/\" ? \"HOME\" : null;\n  };\n  PathsService.prototype.getPreviousPath = function () {\n    return this.previousPath;\n  };\n  PathsService.prototype.getCurrentPath = function () {\n    return this.currentPath || window.location.pathname;\n  };\n  PathsService.prototype.onChange = function () {\n    return this.pathsObservable;\n  };\n  PathsService.prototype.onActiveSectionChange = function () {\n    var _this = this;\n    return this.pathsObservable.pipe(map(function (path) {\n      return _this.getActiveSection(path);\n    }));\n  };\n  PathsService.prototype.getParameterByName = function (name, url) {\n    if (!url) url = window.location.href;\n    name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n    var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return \"\";\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n  };\n  PathsService.prototype.encodeNextUrl = function (url) {\n    var slashesRegExp = new RegExp(\"/\", \"g\");\n    var semicolonRegExp = new RegExp(\";\", \"g\");\n    var slashCoded = \"~\";\n    var semicolonCoded = \"|\";\n    return url.replace(slashesRegExp, slashCoded).replace(semicolonRegExp, semicolonCoded);\n  };\n  PathsService.prototype.decodeNextUrl = function (url) {\n    if (url) {\n      var slashCodedRegExp = new RegExp(\"~\", \"g\");\n      var semicolonCodedRegExp = /\\|/g;\n      var slash = \"/\";\n      var semicolon = \";\";\n      var nextSeparator = \"~next~\";\n      var firstIndex = url.indexOf(nextSeparator);\n      if (firstIndex > -1) {\n        var decodedUrl = url.substring(0, firstIndex + nextSeparator.length);\n        decodedUrl = decodedUrl.replace(slashCodedRegExp, slash).replace(semicolonCodedRegExp, semicolon);\n        var nextUrl = url.substring(firstIndex + nextSeparator.length);\n        return decodedUrl + nextUrl;\n      } else {\n        return url.replace(slashCodedRegExp, slash).replace(semicolonCodedRegExp, semicolon);\n      }\n    } else {\n      return null;\n    }\n  };\n  PathsService.ɵfac = function PathsService_Factory(t) {\n    return new (t || PathsService)(i0.ɵɵinject(i1.Router));\n  };\n  PathsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PathsService,\n    factory: PathsService.ɵfac\n  });\n  return PathsService;\n}();\nexport { PathsService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}