{"ast":null,"code":"import { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/forkJoin';\nimport { InfoMessageService, TranslationsService, AuthUserService, SettingsService } from './common/service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./common/service\";\nvar AppComponent = /** @class */function () {\n  function AppComponent(_infoMessage, _settings, _translations, _authUser) {\n    this._infoMessage = _infoMessage;\n    this._settings = _settings;\n    this._translations = _translations;\n    this._authUser = _authUser;\n    this.translationsReady = false;\n  }\n  AppComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    this._translations.getTranslations().subscribe(function (t) {\n      return _this.translations = t;\n    });\n    this._infoMessage.init();\n    Observable.forkJoin(this._settings.get(), this._authUser.get()).subscribe(function (_a) {\n      var settings = _a[0],\n        user = _a[1];\n      _this._translations.load(settings /*, user, this._profile*/);\n    });\n    this._translations.getTranslations().subscribe(function (translations) {\n      _this.translations = translations;\n      _this.translationsReady = true;\n    });\n  };\n  AppComponent.prototype.isAppReady = function () {\n    return this.translationsReady;\n  };\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.InfoMessageService), i0.ɵɵdirectiveInject(i1.SettingsService), i0.ɵɵdirectiveInject(i1.TranslationsService), i0.ɵɵdirectiveInject(i1.AuthUserService));\n  };\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 1,\n    vars: 0,\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"router-outlet\");\n      }\n    },\n    encapsulation: 2\n  });\n  return AppComponent;\n}();\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}