{"ast":null,"code":"import * as i0 from \"@angular/core\";\nvar UtilsService = /** @class */function () {\n  function UtilsService() {}\n  UtilsService.prototype.generateJson = function (translations) {\n    var generatedJson = '{\\n';\n    var counter = 0;\n    var keys = Object.keys(translations.labels);\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n      var labItor = keys_1[_i];\n      // order of conversions is important: first escape all slashes, then deal with special characters that generate slashes\n      // (that are already escaped, hence no need to do it again)\n      var value = translations.labels[labItor].replace(/\\\\/g, '\\\\\\\\') // convert slash \\ to escaped slash \\\\\n      .replace(/\"/g, '\\\\\"') // convert quote \" to escaped quote \\\"\n      .replace(/\\n/g, \"\\\\n\") // convert \\n to escaped \\\\n\n      .replace(/\\r/g, \"\\\\r\"); // ditto\n      var txt = \"    \\\"\".concat(labItor, \"\\\": \\\"\").concat(value, \"\\\"\");\n      ++counter;\n      if (counter !== keys.length) txt += ',\\n';\n      generatedJson += txt;\n    }\n    generatedJson += '\\n}';\n    return generatedJson;\n  };\n  UtilsService.prototype.isJsonValid = function (json) {\n    try {\n      JSON.parse(json);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  };\n  UtilsService.ɵfac = function UtilsService_Factory(t) {\n    return new (t || UtilsService)();\n  };\n  UtilsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UtilsService,\n    factory: UtilsService.ɵfac\n  });\n  return UtilsService;\n}();\nexport { UtilsService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}