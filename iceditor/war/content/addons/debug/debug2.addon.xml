<?xml version="1.0" encoding="UTF-8" ?> 

<addon id="DebugAddon">
	
	<model>
		<property name="Title" type="string"/>
		<property name="Text" type="html"/>
		<property name="Muzyka" type="audio"/>
		<property name="Obrazek" type="image"/>
		<property name="Plik" type="file"/>
		<property name="Naracja" type="narration"/>
		<property name="Items" type="list">
			<property name="Title" type="string"/>
			<property name="HTML" type="html"/>
			<property name="Picture" type="image"/>
			<property name="Text" type="text"/>
			<property name="Is it?" type="boolean"/>
			<property name="Plik" type="file"/>
		</property>
	</model>
	
	<css>
		.debugGreen{background-color:lightgreen;}
	</css>
	
	<view>
	  	&lt;div class='debugGreen'&gt;
		&lt;p&gt;${mytext}&lt;/p&gt;
		&lt;button id='mybutton'&gt; Click me! &lt;/button&gt;
		&lt;/div&gt;
	</view>
	
	<preview>
	  	&lt;div class='debugGreen'&gt;
		&lt;p class='debugGreen'&gt;Title&lt;/p&gt;
		&lt;p&gt; Text &lt;/p&gt;
		&lt;p&gt; Items &lt;/p&gt;
		&lt;/div&gt;
	</preview>
	
	<presenter>
		function AddonDebugAddon_create(){
			
			var presenter = function(){}

			var element;
			var playerController;
			
			
			presenter.setPlayerController = function(service){
				playerController = service;
			}
			
			
			presenter.createPreview = function(view, model){
				
				nodeList = view.getElementsByTagName('p');
				nodeList[0].innerHTML = model['Title'];
				nodeList[1].innerHTML = model['Text']; 
				var items = model['Items'];
				if(items.length > 2){
					//nodeList[2].innerHTML = 'Length: ' + items.length + " " + items[2]['Title'];
					nodeList[2].innerHTML = 'Length: ' + items.length + " " + items[2]['File'];
				}
			}

			presenter.run = function(view, model){
				
			}

			presenter.setShowErrorsMode = function(){
				element.innerHTML = 'setShowErrorsMode';
			}
			
			presenter.setWorkMode = function(){
				element.innerHTML = 'setWorkMode';
			}
			
			presenter.reset = function(){
				element.innerHTML = 'reset';
			}
			
			presenter.getErrorCount = function(){
				return 7;
			}
			
			presenter.getMaxScore = function(){
				return 3;
			}
			
			presenter.getScore = function(){
				return 1;
			}
			
			presenter.getState = function(){
				return "State saved";
			}

			presenter.setState = function(state){
			}

			return presenter;
		}
	</presenter>
	
</addon>
